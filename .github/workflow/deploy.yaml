name: 'Build and Deploy to Cloud Run'

on:
  push:
    branches:
      - "main"

env:
  PROJECT_ID: 'restaurant-rag'
  PROJECT_NAME: 'basic-api'
  SERVICE_ACCOUNT: 'github-deployer@restaurant-rag.iam.gserviceaccount.com'
  WORKLOAD_IDENTITY_PROVIDER: 'projects/293653495816/locations/global/workloadIdentityPools/github/providers/my-repo'

  REGION: 'asia-east1'
  ARTIFACT_REGISTRY_NAME: 'rag-repo'
  SERVICE: 'basic-api'

jobs:
  deploy:
    runs-on: 'ubuntu-latest'
    environment: restaurant_RAG_new

    permissions:
      contents: 'read'
      id-token: 'write'

    steps:
      - name: 'Checkout source code'
        uses: actions/checkout@v4

      - name: 'Generate requirements.txt with Poetry'
        run: |
          [ -f "pyproject.toml" ] || (echo "ERROR: pyproject.toml not found!" && exit 1)
          curl -sSL https://install.python-poetry.org | python3 - --version 1.8.2
          export PATH="$HOME/.local/bin:$PATH"
          poetry export -f requirements.txt --output requirements.txt --without-hashes

      - id: 'auth'
        name: 'Authenticate to Google Cloud'
        uses: google-github-actions/auth@v2
        with:
          workload_identity_provider: ${{ env.WORKLOAD_IDENTITY_PROVIDER }}
          service_account: ${{ env.SERVICE_ACCOUNT }}
          create_credentials_file: true

      - name: 'Set up gcloud SDK'
        uses: google-github-actions/setup-gcloud@v2

      - name: 'Configure Docker with gcloud'
        run: |
          gcloud auth configure-docker ${{ env.REGION }}-docker.pkg.dev --quiet

      - name: 'Build and Push Container'
        run: |
          IMAGE="${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_NAME }}/${{ env.PROJECT_NAME }}:${{ github.sha }}"
          docker build -f deploy.Dockerfile --tag "${IMAGE}" .
          docker push "${IMAGE}"

      - name: 'Deploy to Cloud Run'
        uses: google-github-actions/deploy-cloudrun@v2
        with:
          service: '${{ env.SERVICE }}'
          region: '${{ env.REGION }}'
          image: '${{ env.REGION }}-docker.pkg.dev/${{ env.PROJECT_ID }}/${{ env.ARTIFACT_REGISTRY_NAME }}/${{ env.PROJECT_NAME }}:${{ github.sha }}'
          env_vars: |
            OPENAI_API_KEY=${{ secrets.OPENAI_API_KEY }}
            PINECONE_API_KEY=${{ secrets.PINECONE_API_KEY }}
            PINECONE_NAMESPACE=${{ secrets.PINECONE_NAMESPACE }}
            PINECONE_INDEX_NAME=${{ secrets.PINECONE_INDEX_NAME }}
            LINE_CHANNEL_ACCESS_TOKEN=${{ secrets.LINE_CHANNEL_ACCESS_TOKEN }}
            LINE_CHANNEL_SECRET=${{ secrets.LINE_CHANNEL_SECRET }}
            PASSWORD_NORMA=${{ secrets.PASSWORD_NORMA }}
            PASSWORD_RESERVE=${{ secrets.PASSWORD_RESERVE }}
            PASSWORD_LEADER=${{ secrets.PASSWORD_LEADER }}
            PASSWORD_VICE_MANAGER=${{ secrets.PASSWORD_VICE_MANAGER }}
            PASSWORD_MANAGER=${{ secrets.PASSWORD_MANAGER }}
            MONGODB_URI=${{ secrets.MONGODB_URI }}
            MONGODB_DB_NAME=${{ secrets.MONGODB_DB_NAME }}
